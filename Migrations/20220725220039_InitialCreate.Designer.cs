// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoInventarioASP;

#nullable disable

namespace ProyectoInventarioASP.Migrations
{
    [DbContext(typeof(ComputadoraContext))]
    [Migration("20220725220039_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProyectoInventarioASP.Models.Computadora", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiscoDuroCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscoDuroTipoCon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImprNumInv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImpresoraId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Mac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemoriaRamCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemoriaRamTec")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MicroTecn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherBoardId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MotherBoardMarca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreDepartamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumInv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeclNumInv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TecladoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImpresoraId");

                    b.HasIndex("MotherBoardId");

                    b.HasIndex("TecladoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Computadoras");

                    b.HasData(
                        new
                        {
                            Id = "96b6bae8-eeab-424e-b88c-10c5f4e746fd",
                            DiscoDuroCap = "256",
                            DiscoDuroTipoCon = "sata",
                            ImprNumInv = "8919",
                            ImpresoraId = "a415186c-9939-45c4-9272-c376fbfc7759",
                            Mac = "3c4r55rf4g6622",
                            MemoriaRamCap = "4",
                            MemoriaRamTec = "DDR4",
                            MicroTecn = "CoreI3-9",
                            MotherBoardId = "604c5fde-0ede-44ec-b032-ae6fc4f904c0",
                            MotherBoardMarca = "Asus",
                            Nombre = "OFC-ECO-CAB",
                            NombreArea = "UEB Economia",
                            NombreDepartamento = "Finanzas",
                            NombreUsuarioId = "ec27f160-d8ac-4836-b590-255b7cf00898",
                            NumInv = "56911",
                            NumIp = "172.19.229.11",
                            SO = "Win 7 32",
                            TeclNumInv = "6312",
                            TecladoId = "2c4d17b1-cfde-454c-8297-9a9ebf5cbfaa",
                            UserName = "juan.perez",
                            estado = 0
                        },
                        new
                        {
                            Id = "5d365484-fc9c-4f88-926e-0fa4ec352150",
                            DiscoDuroCap = "256",
                            DiscoDuroTipoCon = "sata",
                            ImprNumInv = "8919",
                            ImpresoraId = "a415186c-9939-45c4-9272-c376fbfc7759",
                            Mac = "3c4r55rf4g6622",
                            MemoriaRamCap = "4",
                            MemoriaRamTec = "DDR4",
                            MicroTecn = "CoreI3-9",
                            MotherBoardId = "604c5fde-0ede-44ec-b032-ae6fc4f904c0",
                            MotherBoardMarca = "Asus",
                            Nombre = "OFC-ECO-CAB",
                            NombreArea = "UEB Economia",
                            NombreDepartamento = "Finanzas",
                            NombreUsuarioId = "ec27f160-d8ac-4836-b590-255b7cf00898",
                            NumInv = "56911",
                            NumIp = "172.19.229.11",
                            SO = "Win 7 32",
                            TeclNumInv = "6431",
                            TecladoId = "f4d44982-7950-4193-b4de-59836f7140b3",
                            UserName = "juan.perez",
                            estado = 0
                        },
                        new
                        {
                            Id = "a8e420e4-ee36-4432-b133-8cb11fa1b5fd",
                            DiscoDuroCap = "256",
                            DiscoDuroTipoCon = "sata",
                            ImprNumInv = "8919",
                            ImpresoraId = "a415186c-9939-45c4-9272-c376fbfc7759",
                            Mac = "3c4r55rf4g6622",
                            MemoriaRamCap = "4",
                            MemoriaRamTec = "DDR4",
                            MicroTecn = "CoreI3-9",
                            MotherBoardId = "604c5fde-0ede-44ec-b032-ae6fc4f904c0",
                            MotherBoardMarca = "Asus",
                            Nombre = "OFC-ECO-CAB",
                            NombreArea = "UEB Economia",
                            NombreDepartamento = "Finanzas",
                            NombreUsuarioId = "3bf5ba68-50be-4e94-adb7-ac843a907fb0",
                            NumInv = "56911",
                            NumIp = "172.19.229.11",
                            SO = "Win 7 32",
                            TeclNumInv = "6312",
                            TecladoId = "2c4d17b1-cfde-454c-8297-9a9ebf5cbfaa",
                            UserName = "fernando",
                            estado = 0
                        },
                        new
                        {
                            Id = "c3f2934d-46ed-4393-b237-7d71a9430db9",
                            DiscoDuroCap = "256",
                            DiscoDuroTipoCon = "sata",
                            ImprNumInv = "8919",
                            ImpresoraId = "a415186c-9939-45c4-9272-c376fbfc7759",
                            Mac = "3c4r55rf4g6622",
                            MemoriaRamCap = "4",
                            MemoriaRamTec = "DDR4",
                            MicroTecn = "CoreI3-9",
                            MotherBoardId = "604c5fde-0ede-44ec-b032-ae6fc4f904c0",
                            MotherBoardMarca = "Asus",
                            Nombre = "OFC-ECO-CAB",
                            NombreArea = "UEB Economia",
                            NombreDepartamento = "Finanzas",
                            NombreUsuarioId = "3bf5ba68-50be-4e94-adb7-ac843a907fb0",
                            NumInv = "56911",
                            NumIp = "172.19.229.11",
                            SO = "Win 7 32",
                            TeclNumInv = "6431",
                            TecladoId = "f4d44982-7950-4193-b4de-59836f7140b3",
                            UserName = "fernando",
                            estado = 0
                        },
                        new
                        {
                            Id = "ce2dfd46-782b-4c35-86da-2407d127ae3e",
                            DiscoDuroCap = "256",
                            DiscoDuroTipoCon = "sata",
                            ImprNumInv = "2145",
                            ImpresoraId = "7bf90439-da5e-4734-ab1e-413f25d5056f",
                            Mac = "3c4r55rf4g6622",
                            MemoriaRamCap = "4",
                            MemoriaRamTec = "DDR4",
                            MicroTecn = "CoreI3-9",
                            MotherBoardId = "604c5fde-0ede-44ec-b032-ae6fc4f904c0",
                            MotherBoardMarca = "Asus",
                            Nombre = "OFC-ECO-CAB",
                            NombreArea = "UEB Economia",
                            NombreDepartamento = "Finanzas",
                            NombreUsuarioId = "ec27f160-d8ac-4836-b590-255b7cf00898",
                            NumInv = "56911",
                            NumIp = "172.19.229.11",
                            SO = "Win 7 32",
                            TeclNumInv = "6312",
                            TecladoId = "2c4d17b1-cfde-454c-8297-9a9ebf5cbfaa",
                            UserName = "juan.perez",
                            estado = 0
                        },
                        new
                        {
                            Id = "ed98be34-e0ef-4988-ab91-975b340d0149",
                            DiscoDuroCap = "256",
                            DiscoDuroTipoCon = "sata",
                            ImprNumInv = "2145",
                            ImpresoraId = "7bf90439-da5e-4734-ab1e-413f25d5056f",
                            Mac = "3c4r55rf4g6622",
                            MemoriaRamCap = "4",
                            MemoriaRamTec = "DDR4",
                            MicroTecn = "CoreI3-9",
                            MotherBoardId = "604c5fde-0ede-44ec-b032-ae6fc4f904c0",
                            MotherBoardMarca = "Asus",
                            Nombre = "OFC-ECO-CAB",
                            NombreArea = "UEB Economia",
                            NombreDepartamento = "Finanzas",
                            NombreUsuarioId = "ec27f160-d8ac-4836-b590-255b7cf00898",
                            NumInv = "56911",
                            NumIp = "172.19.229.11",
                            SO = "Win 7 32",
                            TeclNumInv = "6431",
                            TecladoId = "f4d44982-7950-4193-b4de-59836f7140b3",
                            UserName = "juan.perez",
                            estado = 0
                        },
                        new
                        {
                            Id = "0634a829-7d07-43b2-9d81-6015d41eb902",
                            DiscoDuroCap = "256",
                            DiscoDuroTipoCon = "sata",
                            ImprNumInv = "2145",
                            ImpresoraId = "7bf90439-da5e-4734-ab1e-413f25d5056f",
                            Mac = "3c4r55rf4g6622",
                            MemoriaRamCap = "4",
                            MemoriaRamTec = "DDR4",
                            MicroTecn = "CoreI3-9",
                            MotherBoardId = "604c5fde-0ede-44ec-b032-ae6fc4f904c0",
                            MotherBoardMarca = "Asus",
                            Nombre = "OFC-ECO-CAB",
                            NombreArea = "UEB Economia",
                            NombreDepartamento = "Finanzas",
                            NombreUsuarioId = "3bf5ba68-50be-4e94-adb7-ac843a907fb0",
                            NumInv = "56911",
                            NumIp = "172.19.229.11",
                            SO = "Win 7 32",
                            TeclNumInv = "6312",
                            TecladoId = "2c4d17b1-cfde-454c-8297-9a9ebf5cbfaa",
                            UserName = "fernando",
                            estado = 0
                        },
                        new
                        {
                            Id = "03c9270a-e324-44ba-9c23-ef66038bc3e4",
                            DiscoDuroCap = "256",
                            DiscoDuroTipoCon = "sata",
                            ImprNumInv = "2145",
                            ImpresoraId = "7bf90439-da5e-4734-ab1e-413f25d5056f",
                            Mac = "3c4r55rf4g6622",
                            MemoriaRamCap = "4",
                            MemoriaRamTec = "DDR4",
                            MicroTecn = "CoreI3-9",
                            MotherBoardId = "604c5fde-0ede-44ec-b032-ae6fc4f904c0",
                            MotherBoardMarca = "Asus",
                            Nombre = "OFC-ECO-CAB",
                            NombreArea = "UEB Economia",
                            NombreDepartamento = "Finanzas",
                            NombreUsuarioId = "3bf5ba68-50be-4e94-adb7-ac843a907fb0",
                            NumInv = "56911",
                            NumIp = "172.19.229.11",
                            SO = "Win 7 32",
                            TeclNumInv = "6431",
                            TecladoId = "f4d44982-7950-4193-b4de-59836f7140b3",
                            UserName = "fernando",
                            estado = 0
                        });
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.DiscoDuro", b =>
                {
                    b.Property<string>("NumSerieId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Capacidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherBoardId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TipoConexion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.HasKey("NumSerieId");

                    b.HasIndex("MotherBoardId");

                    b.ToTable("DiscosDuro");

                    b.HasData(
                        new
                        {
                            NumSerieId = "f4ff99c8-922b-435c-9b50-870bb3c65e44",
                            Capacidad = "256",
                            Marca = "toshiba",
                            MotherBoardId = "604c5fde-0ede-44ec-b032-ae6fc4f904c0",
                            TipoConexion = "sata",
                            estado = 0
                        });
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.Display", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ComputadoraId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumInv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumInvPc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComputadoraId");

                    b.ToTable("Displays");

                    b.HasData(
                        new
                        {
                            Id = "f3b5cb85-a2ed-4313-853a-cfc8f1eb331e",
                            ComputadoraId = "96b6bae8-eeab-424e-b88c-10c5f4e746fd",
                            Marca = "Samsung",
                            NumInv = "4321",
                            NumInvPc = "56911",
                            NumSerie = "7h7g8f8fke956rf67uuj43ed",
                            estado = 0
                        },
                        new
                        {
                            Id = "d85ab63e-2fcf-4437-bb41-66dfb0312e98",
                            ComputadoraId = "5d365484-fc9c-4f88-926e-0fa4ec352150",
                            Marca = "Samsung",
                            NumInv = "4321",
                            NumInvPc = "56911",
                            NumSerie = "7h7g8f8fke956rf67uuj43ed",
                            estado = 0
                        },
                        new
                        {
                            Id = "b2519b1b-ba4e-4022-a83d-222b23aef323",
                            ComputadoraId = "a8e420e4-ee36-4432-b133-8cb11fa1b5fd",
                            Marca = "Samsung",
                            NumInv = "4321",
                            NumInvPc = "56911",
                            NumSerie = "7h7g8f8fke956rf67uuj43ed",
                            estado = 0
                        },
                        new
                        {
                            Id = "cc043efe-df72-4ab4-be4f-d06cd3994dc1",
                            ComputadoraId = "c3f2934d-46ed-4393-b237-7d71a9430db9",
                            Marca = "Samsung",
                            NumInv = "4321",
                            NumInvPc = "56911",
                            NumSerie = "7h7g8f8fke956rf67uuj43ed",
                            estado = 0
                        },
                        new
                        {
                            Id = "ab6a5e7d-f048-4729-ab09-104b1da0fd3e",
                            ComputadoraId = "ce2dfd46-782b-4c35-86da-2407d127ae3e",
                            Marca = "Samsung",
                            NumInv = "4321",
                            NumInvPc = "56911",
                            NumSerie = "7h7g8f8fke956rf67uuj43ed",
                            estado = 0
                        },
                        new
                        {
                            Id = "f89ec1c8-c59e-4968-8a82-d96c0ad8686f",
                            ComputadoraId = "ed98be34-e0ef-4988-ab91-975b340d0149",
                            Marca = "Samsung",
                            NumInv = "4321",
                            NumInvPc = "56911",
                            NumSerie = "7h7g8f8fke956rf67uuj43ed",
                            estado = 0
                        },
                        new
                        {
                            Id = "13fb5896-c170-4774-b4a3-f44b0f09bdf1",
                            ComputadoraId = "0634a829-7d07-43b2-9d81-6015d41eb902",
                            Marca = "Samsung",
                            NumInv = "4321",
                            NumInvPc = "56911",
                            NumSerie = "7h7g8f8fke956rf67uuj43ed",
                            estado = 0
                        },
                        new
                        {
                            Id = "89a3e86e-2b44-462f-928b-3962c5c70350",
                            ComputadoraId = "03c9270a-e324-44ba-9c23-ef66038bc3e4",
                            Marca = "Samsung",
                            NumInv = "4321",
                            NumInvPc = "56911",
                            NumSerie = "7h7g8f8fke956rf67uuj43ed",
                            estado = 0
                        });
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.Impresora", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumInv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Impresoras");

                    b.HasData(
                        new
                        {
                            Id = "a415186c-9939-45c4-9272-c376fbfc7759",
                            Marca = "Epson",
                            NumInv = "8919",
                            NumSerie = "jjdj778sk66he4535ef",
                            estado = 0
                        },
                        new
                        {
                            Id = "7bf90439-da5e-4734-ab1e-413f25d5056f",
                            Marca = "HP",
                            NumInv = "2145",
                            NumSerie = "jjdj778skld887f333f",
                            estado = 0
                        });
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.MemoriaRam", b =>
                {
                    b.Property<string>("KayNumSerieId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Capacidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherBoardId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Tecnologia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.HasKey("KayNumSerieId");

                    b.HasIndex("MotherBoardId");

                    b.ToTable("MemoriasRam");

                    b.HasData(
                        new
                        {
                            KayNumSerieId = "eaa0e024-7070-4e55-a2f5-7e6e91944158",
                            Capacidad = "4",
                            Marca = "Kingston",
                            MotherBoardId = "604c5fde-0ede-44ec-b032-ae6fc4f904c0",
                            Tecnologia = "DDR4",
                            estado = 0
                        });
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.MicroProcesador", b =>
                {
                    b.Property<string>("NumSerieId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tecnologia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.HasKey("NumSerieId");

                    b.ToTable("MicroProcesadores");

                    b.HasData(
                        new
                        {
                            NumSerieId = "90a5c486-a934-4b8d-8571-955724d3f930",
                            Marca = "Intel",
                            Tecnologia = "CoreI3-9",
                            estado = 0
                        });
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.MotherBoard", b =>
                {
                    b.Property<string>("NumSerieId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MicroProcesadorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.HasKey("NumSerieId");

                    b.HasIndex("MicroProcesadorId");

                    b.ToTable("MotherBoards");

                    b.HasData(
                        new
                        {
                            NumSerieId = "604c5fde-0ede-44ec-b032-ae6fc4f904c0",
                            Marca = "Asus",
                            MicroProcesadorId = "90a5c486-a934-4b8d-8571-955724d3f930",
                            estado = 0
                        });
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.Teclado", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumInv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoConexion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Teclados");

                    b.HasData(
                        new
                        {
                            Id = "2c4d17b1-cfde-454c-8297-9a9ebf5cbfaa",
                            Marca = "DELL",
                            NumInv = "6312",
                            NumSerie = "7h7g8f8fke9gtr54t6y67uyh",
                            TipoConexion = "usb",
                            estado = 0
                        },
                        new
                        {
                            Id = "f4d44982-7950-4193-b4de-59836f7140b3",
                            Marca = "Delton",
                            NumInv = "6431",
                            NumSerie = "67tun7588nd7y7y4t6y45rtg",
                            TipoConexion = "usb",
                            estado = 0
                        });
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("permisos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = "1",
                            Email = "juca@ki.com",
                            Nombre = "Victor Diaz",
                            password = "123",
                            permisos = "admin",
                            username = "victor"
                        });
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NombreArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreDepartamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = "ec27f160-d8ac-4836-b590-255b7cf00898",
                            NombreArea = "Economia",
                            NombreCompleto = "Juan Perez",
                            NombreDepartamento = "Finanzas",
                            NombreUsuario = "juan.perez"
                        },
                        new
                        {
                            Id = "3bf5ba68-50be-4e94-adb7-ac843a907fb0",
                            NombreArea = "UEB Sancti-Spiritus",
                            NombreCompleto = "Fernando Alonso",
                            NombreDepartamento = "Tecnico",
                            NombreUsuario = "fernando"
                        });
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.Computadora", b =>
                {
                    b.HasOne("ProyectoInventarioASP.Models.Impresora", "Impresora")
                        .WithMany("Computadora")
                        .HasForeignKey("ImpresoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoInventarioASP.Models.MotherBoard", "MotherBoard")
                        .WithMany("Computadora")
                        .HasForeignKey("MotherBoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoInventarioASP.Models.Teclado", "Teclado")
                        .WithMany("Computadora")
                        .HasForeignKey("TecladoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoInventarioASP.Models.Usuario", "Usuario")
                        .WithMany("Computadora")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Impresora");

                    b.Navigation("MotherBoard");

                    b.Navigation("Teclado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.DiscoDuro", b =>
                {
                    b.HasOne("ProyectoInventarioASP.Models.MotherBoard", "motherBoard")
                        .WithMany("Discos")
                        .HasForeignKey("MotherBoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("motherBoard");
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.Display", b =>
                {
                    b.HasOne("ProyectoInventarioASP.Models.Computadora", "Computadora")
                        .WithMany("Display")
                        .HasForeignKey("ComputadoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Computadora");
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.MemoriaRam", b =>
                {
                    b.HasOne("ProyectoInventarioASP.Models.MotherBoard", "MotherBoard")
                        .WithMany("Memorias")
                        .HasForeignKey("MotherBoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MotherBoard");
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.MotherBoard", b =>
                {
                    b.HasOne("ProyectoInventarioASP.Models.MicroProcesador", "Micro")
                        .WithMany("MotherBoard")
                        .HasForeignKey("MicroProcesadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Micro");
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.Computadora", b =>
                {
                    b.Navigation("Display");
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.Impresora", b =>
                {
                    b.Navigation("Computadora");
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.MicroProcesador", b =>
                {
                    b.Navigation("MotherBoard");
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.MotherBoard", b =>
                {
                    b.Navigation("Computadora");

                    b.Navigation("Discos");

                    b.Navigation("Memorias");
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.Teclado", b =>
                {
                    b.Navigation("Computadora");
                });

            modelBuilder.Entity("ProyectoInventarioASP.Models.Usuario", b =>
                {
                    b.Navigation("Computadora");
                });
#pragma warning restore 612, 618
        }
    }
}
